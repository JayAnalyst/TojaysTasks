{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/James/tjt/tjtapp/src/app/components/TaskItem.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState } from \"react\";\r\n\r\ninterface TaskProps {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  points: number;\r\n  completed: boolean;\r\n  onToggleComplete: (task: any) => void;\r\n}\r\n\r\nexport default function TaskItem({ id, title, description, points, completed, onToggleComplete }: TaskProps) {\r\n  const [isCompleted, setIsCompleted] = useState(completed);\r\n\r\n  const handleToggle = () => {\r\n    setIsCompleted(!isCompleted);\r\n    onToggleComplete({ id, completed: !isCompleted });\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${isCompleted ? \"completed\" : \"\"}`}>\r\n      <div className=\"task-content\">\r\n        <h3>{title}</h3>\r\n        {description && <p>{description}</p>}\r\n        <span className=\"points\">{points} pts</span>\r\n      </div>\r\n      <button className=\"tick-button\" onClick={handleToggle}>\r\n        {isCompleted ? \"‚úÖ\" : \"‚òëÔ∏è\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAYe,SAAS,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,gBAAgB,EAAa;;IACzG,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,MAAM,eAAe;QACnB,eAAe,CAAC;QAChB,iBAAiB;YAAE;YAAI,WAAW,CAAC;QAAY;IACjD;IAEA,qBACE,6LAAC;QAAI,WAAW,CAAC,UAAU,EAAE,cAAc,cAAc,IAAI;;0BAC3D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;kCAAI;;;;;;oBACJ,6BAAe,6LAAC;kCAAG;;;;;;kCACpB,6LAAC;wBAAK,WAAU;;4BAAU;4BAAO;;;;;;;;;;;;;0BAEnC,6LAAC;gBAAO,WAAU;gBAAc,SAAS;0BACtC,cAAc,MAAM;;;;;;;;;;;;AAI7B;GApBwB;KAAA","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/James/tjt/tjtapp/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport TaskItem from \"./components/TaskItem\";\n\ninterface Task {\n  id: string;\n  title: string;\n  description: string;\n  points: number;\n  completed: boolean;\n  type?: string;\n  teamMemberId?: string;\n}\n\ninterface User {\n  id: string;\n  email: string;\n}\n\nexport default function Home() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [newTask, setNewTask] = useState({ title: \"\", description: \"\", points: 10, type: \"personal\" });\n  const [teamMembers, setTeamMembers] = useState<User[]>([]);\n  const [selectedTeamMember, setSelectedTeamMember] = useState<string>(\"\");\n\n  useEffect(() => {\n    fetchTasks();\n    fetchTeamMembers();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(\"/api/tasks\");\n      if (!response.ok) {\n        console.error(\"Failed to fetch tasks:\", response.statusText);\n        return;\n      }\n      const data = await response.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n\n  const fetchTeamMembers = async () => {\n    try {\n      const response = await fetch(\"/api/team-members\");\n      if (!response.ok) {\n        console.error(\"Failed to fetch team members:\", response.statusText);\n        return;\n      }\n      const data = await response.json();\n      setTeamMembers(data);\n    } catch (error) {\n      console.error(\"Error fetching team members:\", error);\n    }\n  };\n\n  const toggleTaskCompletion = async (task: Task) => {\n    try {\n      const response = await fetch(\"/api/tasks\", {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id: task.id, completed: !task.completed }),\n      });\n      if (!response.ok) {\n        console.error(\"Failed to update task\");\n        return;\n      }\n      const updatedTask = await response.json();\n      setTasks((prevTasks) =>\n        prevTasks.map((t) => (t.id === updatedTask.id ? updatedTask : t))\n      );\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n\n  const addTask = async () => {\n    if (!newTask.title.trim()) return;\n    try {\n      const response = await fetch(\"/api/tasks\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ ...newTask, teamMemberId: newTask.type === \"team\" ? selectedTeamMember : null }),\n      });\n      if (!response.ok) {\n        console.error(\"Failed to add task:\", await response.text());\n        return;\n      }\n      setNewTask({ title: \"\", description: \"\", points: 10, type: \"personal\" });\n      setSelectedTeamMember(\"\");\n      fetchTasks();\n    } catch (error) {\n      console.error(\"Error adding task:\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>üå∏ Spring To-Do List üåø</h1>\n\n      {/* Task Input Form */}\n      <div className=\"task-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Task Name\"\n          value={newTask.title}\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Task Description\"\n          value={newTask.description}\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Points\"\n          value={newTask.points}\n          onChange={(e) => setNewTask({ ...newTask, points: parseInt(e.target.value) })}\n          min=\"1\"\n        />\n        {/* Task Type Selection */}\n        <select\n          value={newTask.type}\n          onChange={(e) => {\n            setNewTask({ ...newTask, type: e.target.value });\n            setSelectedTeamMember(\"\");\n          }}\n        >\n          <option value=\"personal\">Personal Task</option>\n          <option value=\"team\">Team Task</option>\n        </select>\n        {/* Team Member Dropdown (only for team tasks) */}\n        {newTask.type === \"team\" && (\n          <select\n            value={selectedTeamMember}\n            onChange={(e) => setSelectedTeamMember(e.target.value)}\n          >\n            <option value=\"\">Assign to...</option>\n            {teamMembers.map((member) => (\n              <option key={member.id} value={member.id}>\n                {member.email}\n              </option>\n            ))}\n          </select>\n        )}\n        <button onClick={addTask}>‚ûï Add Task</button>\n      </div>\n\n      {/* Personal Task List */}\n      <h2>üìù Your Tasks</h2>\n      <div className=\"task-list\">\n        {tasks.filter((task) => task.type !== \"team\").length > 0 ? (\n          tasks\n            .filter((task) => task.type !== \"team\")\n            .map((task) => (\n              <TaskItem key={task.id} {...task} onToggleComplete={toggleTaskCompletion} />\n            ))\n        ) : (\n          <p className=\"no-tasks\">No personal tasks yet. üå∑</p>\n        )}\n      </div>\n\n      {/* Team Task List */}\n      <h2>üë• Team Tasks</h2>\n      <div className=\"task-list\">\n        {tasks.filter((task) => task.type === \"team\").length > 0 ? (\n          tasks\n            .filter((task) => task.type === \"team\")\n            .map((task) => (\n              <TaskItem key={task.id} {...task} onToggleComplete={toggleTaskCompletion} />\n            ))\n        ) : (\n          <p className=\"no-tasks\">No team tasks yet. üåø</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}