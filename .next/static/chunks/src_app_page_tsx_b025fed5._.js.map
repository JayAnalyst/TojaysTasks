{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/James/tjt/tjtapp/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\ninterface Task {\n  id: string;\n  title: string;\n  description?: string;\n  completed: boolean;\n  type: \"personal\" | \"team\";\n  teamMemberId?: string;\n  points: number;\n}\n\ninterface User {\n  id: string;\n  email: string;\n}\n\nexport default function TaskPage() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [userPoints, setUserPoints] = useState({ personal: 0, team: 0 });\n  const [teamMembers, setTeamMembers] = useState<User[]>([]);\n  const [newTask, setNewTask] = useState({\n    title: \"\",\n    description: \"\",\n    type: \"personal\",\n    teamMemberId: \"\",\n    points: 10, // Default points\n  });\n\n  useEffect(() => {\n    fetchTasks();\n    fetchUserPoints();\n    fetchTeamMembers(); // ‚úÖ Fetch team members for dropdown\n  }, []);\n\n  // ‚úÖ Fetch all tasks\n  const fetchTasks = async () => {\n    try {\n      const res = await fetch(\"/api/tasks\");\n      const data = await res.json();\n      setTasks(data);\n    } catch (error) {\n      console.error(\"‚ùå Error fetching tasks:\", error);\n    }\n  };\n\n  // ‚úÖ Fetch user points (separate personal & team)\n  const fetchUserPoints = async () => {\n    try {\n      const res = await fetch(\"/api/user/points\");\n      const data = await res.json();\n      setUserPoints({ personal: data.personalPoints, team: data.teamPoints });\n    } catch (error) {\n      console.error(\"‚ùå Error fetching user points:\", error);\n    }\n  };\n\n  // ‚úÖ Fetch team members for dropdown\n  const fetchTeamMembers = async () => {\n    try {\n      const res = await fetch(\"/api/team-members\"); // Adjust API route if needed\n      const data = await res.json();\n      setTeamMembers(data);\n    } catch (error) {\n      console.error(\"‚ùå Error fetching team members:\", error);\n    }\n  };\n\n  // ‚úÖ Create a new task\n  const addTask = async () => {\n    if (!newTask.title) return alert(\"Task title is required\");\n    if (newTask.type === \"team\" && !newTask.teamMemberId) return alert(\"Select a team member\");\n\n    try {\n      const res = await fetch(\"/api/tasks\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newTask),\n      });\n\n      if (!res.ok) throw new Error(\"Failed to create task\");\n\n      setNewTask({ title: \"\", description: \"\", type: \"personal\", teamMemberId: \"\", points: 10 });\n      fetchTasks();\n      fetchUserPoints();\n    } catch (error) {\n      console.error(\"‚ùå Failed to add task:\", error);\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">Tasks</h1>\n\n      {/* üîπ Display User Points */}\n      <div className=\"mb-4 text-lg font-semibold\">\n        Your Points:\n        <span className=\"text-blue-600 ml-2\">Personal: {userPoints.personal} pts</span>,\n        <span className=\"text-green-600 ml-2\">Team: {userPoints.team} pts</span>\n      </div>\n\n      {/* üîπ New Task Input */}\n      <div className=\"flex flex-col gap-2 mb-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Task Title\"\n          className=\"border p-2\"\n          value={newTask.title}\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description (optional)\"\n          className=\"border p-2\"\n          value={newTask.description}\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Points\"\n          className=\"border p-2\"\n          value={newTask.points}\n          onChange={(e) => setNewTask({ ...newTask, points: parseInt(e.target.value) || 10 })}\n        />\n\n        {/* üîπ Task Type Selection */}\n        <select\n          className=\"border p-2\"\n          value={newTask.type}\n          onChange={(e) => setNewTask({ ...newTask, type: e.target.value as \"personal\" | \"team\", teamMemberId: \"\" })}\n        >\n          <option value=\"personal\">Personal Task</option>\n          <option value=\"team\">Team Task</option>\n        </select>\n\n        {/* üîπ Team Member Dropdown (Only for Team Tasks) */}\n        {newTask.type === \"team\" && (\n          <select\n            className=\"border p-2\"\n            value={newTask.teamMemberId}\n            onChange={(e) => setNewTask({ ...newTask, teamMemberId: e.target.value })}\n          >\n            <option value=\"\">Select a team member</option>\n            {teamMembers.map((member) => (\n              <option key={member.id} value={member.id}>\n                {member.email}\n              </option>\n            ))}\n          </select>\n        )}\n\n        <button className=\"bg-blue-500 text-white p-2\" onClick={addTask}>\n          Add Task\n        </button>\n      </div>\n\n      {/* üîπ Task List */}\n      <ul className=\"space-y-3\">\n        {tasks.map((task) => (\n          <li key={task.id} className=\"flex items-center justify-between p-2 border rounded\">\n            <div>\n              <span className={task.completed ? \"line-through\" : \"\"}>{task.title}</span>\n              <span className=\"ml-2 text-sm text-gray-500\">({task.points} pts)</span>\n              {task.type === \"team\" && <span className=\"text-green-600 ml-2\">[Team Task]</span>}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}