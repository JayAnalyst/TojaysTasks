{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/James/tjt/tjtapp/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport { PrismaClient } from \"@prisma/client\";\r\nimport bcrypt from \"bcryptjs\";\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport const authOptions = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: \"Credentials\",\r\n      credentials: {\r\n        email: { label: \"Email\", type: \"email\" },\r\n        password: { label: \"Password\", type: \"password\" },\r\n      },\r\n      async authorize(credentials) {\r\n        if (!credentials?.email || !credentials?.password) {\r\n          throw new Error(\"Email and password are required\");\r\n        }\r\n\r\n        // Find the user in the database\r\n        const user = await prisma.user.findUnique({\r\n          where: { email: credentials.email },\r\n        });\r\n\r\n        if (!user || !user.password) {\r\n          throw new Error(\"Invalid credentials\");\r\n        }\r\n\r\n        // Verify the password\r\n        const isValid = await bcrypt.compare(credentials.password, user.password);\r\n        if (!isValid) {\r\n          throw new Error(\"Invalid credentials\");\r\n        }\r\n\r\n        // Return user object for session\r\n        return { id: user.id, name: user.name, email: user.email };\r\n      },\r\n    }),\r\n  ],\r\n  secret: process.env.NEXTAUTH_SECRET,\r\n  pages: {\r\n    signIn: \"/login\", // Redirect to custom login page\r\n  },\r\n  callbacks: {\r\n    async session({ session, token }) {\r\n      if (token) {\r\n        session.user.id = token.id;\r\n      }\r\n      return session;\r\n    },\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        token.id = user.id;\r\n      }\r\n      return token;\r\n    },\r\n  },\r\n  session: {\r\n    strategy: \"jwt\",\r\n  },\r\n};\r\n\r\nconst handler = NextAuth(authOptions);\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,MAAM,cAAc;IACzB,WAAW;QACT,CAAA,GAAA,wJAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;oBACjD,MAAM,IAAI,MAAM;gBAClB;gBAEA,gCAAgC;gBAChC,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;oBACxC,OAAO;wBAAE,OAAO,YAAY,KAAK;oBAAC;gBACpC;gBAEA,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;oBAC3B,MAAM,IAAI,MAAM;gBAClB;gBAEA,sBAAsB;gBACtB,MAAM,UAAU,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAAC,YAAY,QAAQ,EAAE,KAAK,QAAQ;gBACxE,IAAI,CAAC,SAAS;oBACZ,MAAM,IAAI,MAAM;gBAClB;gBAEA,iCAAiC;gBACjC,OAAO;oBAAE,IAAI,KAAK,EAAE;oBAAE,MAAM,KAAK,IAAI;oBAAE,OAAO,KAAK,KAAK;gBAAC;YAC3D;QACF;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IACnC,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,EAAE;YAC5B;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;IACF;IACA,SAAS;QACP,UAAU;IACZ;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,qIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/James/tjt/tjtapp/src/app/page.tsx"],"sourcesContent":["import Link from \"next/link\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"./api/auth/[...nextauth]/route\";\n\nexport default async function Home() {\n  const session = await getServerSession(authOptions);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center min-h-screen text-center\">\n      <h1 className=\"text-3xl font-bold\">Welcome to the To-Do App</h1>\n\n      {session ? (\n        <div className=\"mt-4\">\n          <p className=\"text-lg\">Hello, {session.user?.email} ðŸ‘‹</p>\n          <Link href=\"/dashboard\" className=\"mt-4 inline-block bg-blue-500 text-white p-2 rounded\">\n            Go to Dashboard\n          </Link>\n        </div>\n      ) : (\n        <div className=\"mt-4\">\n          <p className=\"text-lg\">Please sign in to manage your tasks.</p>\n          <Link href=\"/login\" className=\"mt-4 inline-block bg-green-500 text-white p-2 rounded\">\n            Sign In\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,wJAAA,CAAA,cAAW;IAElD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAqB;;;;;;YAElC,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;;4BAAU;4BAAQ,QAAQ,IAAI,EAAE;4BAAM;;;;;;;kCACnD,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAa,WAAU;kCAAuD;;;;;;;;;;;qCAK3F,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAU;;;;;;kCACvB,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAS,WAAU;kCAAwD;;;;;;;;;;;;;;;;;;AAOhG","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}